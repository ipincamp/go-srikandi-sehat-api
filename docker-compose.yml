services:
  api:
    image: srikandisehat:1.0.0-api
    build:
      context: .
      dockerfile: Dockerfile
    container_name: srikandisehat_api
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./database:/app/database
      - ./logs:/app/logs
      - ./serviceAccountKey.json:/app/serviceAccountKey.json
    networks:
      - srikandi-sehat
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mariadb:10.11.13
    container_name: srikandisehat_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      TZ: Asia/Jakarta
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --time_zone=Asia/Jakarta
    volumes:
      - srikandi-db:/var/lib/mysql
      - ./.docker/mariadb/init-timezone.sh:/docker-entrypoint-initdb.d/init-timezone.sh
    networks:
      - srikandi-sehat
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASS}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25-alpine
    container_name: srikandisehat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Asia/Jakarta
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - srikandi-sehat
    depends_on:
      - api

  certbot:
    image: certbot/certbot
    container_name: srikandisehat_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backup:
    image: mariadb:10.11.13
    container_name: srikandisehat_backup
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - TZ=Asia/Jakarta
    volumes:
      - ./.docker/backup:/scripts
      - ./backups:/backups
    networks:
      - srikandi-sehat
    entrypoint: /scripts/backup.sh

networks:
  srikandi-sehat:
    driver: bridge

volumes:
  srikandi-db:
    driver: local
